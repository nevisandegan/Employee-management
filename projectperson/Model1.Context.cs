//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace projectperson
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<deletetb> deletetbs { get; set; }
        public virtual DbSet<person> people { get; set; }
    
        public virtual int addperosn(string personnelcode, string firstname, string lastname, Nullable<int> age)
        {
            var personnelcodeParameter = personnelcode != null ?
                new ObjectParameter("personnelcode", personnelcode) :
                new ObjectParameter("personnelcode", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addperosn", personnelcodeParameter, firstnameParameter, lastnameParameter, ageParameter);
        }
    
        public virtual int deleteperson(string personnelcode)
        {
            var personnelcodeParameter = personnelcode != null ?
                new ObjectParameter("personnelcode", personnelcode) :
                new ObjectParameter("personnelcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteperson", personnelcodeParameter);
        }
    
        public virtual ObjectResult<selectdeletetb_Result> selectdeletetb(string personnelcode)
        {
            var personnelcodeParameter = personnelcode != null ?
                new ObjectParameter("personnelcode", personnelcode) :
                new ObjectParameter("personnelcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectdeletetb_Result>("selectdeletetb", personnelcodeParameter);
        }
    
        public virtual ObjectResult<selectperson_Result> selectperson(string personnelcode)
        {
            var personnelcodeParameter = personnelcode != null ?
                new ObjectParameter("personnelcode", personnelcode) :
                new ObjectParameter("personnelcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectperson_Result>("selectperson", personnelcodeParameter);
        }
    
        public virtual int updateperosn(string personnelcode, string firstname, string lastname, Nullable<int> age)
        {
            var personnelcodeParameter = personnelcode != null ?
                new ObjectParameter("personnelcode", personnelcode) :
                new ObjectParameter("personnelcode", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateperosn", personnelcodeParameter, firstnameParameter, lastnameParameter, ageParameter);
        }
    }
}
